# solproxy

# https://learnblockchain.cn/article/4282

创建一个可升级的合约
在本地测试该合约
将合约部署到公共网络上
将升级的控制权转移到Gnosis 多签账号中!
创建新的实现版本
在本地测试升级
部署新的实现
升级合约

在以上任务中，你已经在本地测试网和公共测试网Ropsten建立并部署了代理合约。你可以继续做更多，例如：
* 使用OpenZeppelin Defender来管理升级。
* 将ProxyAdmin所有者转移到一个多签名地址，如Gnosis Safe多签名钱包。

由于技术上的限制，当你把一个合约升级到新版本时，你不能改变该合约的存储布局。
这意味着，如果你已经在合约中声明了一个状态变量，你不能删除它，改变它的类型，或在它之前声明另一个变量。
在我们的Box例子中，这意味着我们只能在原有值之后添加新的状态变量。

在学习如何升级合同时，您可能会发现自己在当地环境中处于合同冲突的境地。要解决这个问题，请考虑使用以下步骤：
停止使用npx hardhat node运行的节点ctrl+C。执行清洁：npx hardhat clean

目前升级到V3，升级到V4会报错，错误如下：
https://forum.openzeppelin.com/t/error-deployment-at-0x-address-is-not-registered/4866/14

Gnosis Safe多签钱包使用。
https://help.safe.global/en/articles/3876461-creating-a-safe-on-a-web-browser

Gnosis Safe 的基础知识
大多数以太坊用户习惯于使用单一密钥钱包（例如：MetaMask），通常称为外部账户（EOA）。
这些帐户使用私钥进行保护，私钥可以转换为用户的 12 个单词的"助记词"。如果该私钥以任何方式被泄露，则资金可能会被盗。
如果您的企业由多于 1 个人组成，则外部帐户不是管理加密业务资金的安全方式。如果员工道德低劣或对于私钥不够小心，资金将永远丢失。
即使您的企业只由您自己组成，我认为这仍然是一种糟糕的资金管理方式。那么，更好的解决方案是什么？
使用多重签名。Gnosis Safe 是一个运行在以太坊上的智能合约钱包，需要最少数量的人在交易发生之前批准，交易才会发生（M-of-N）。
例如，如果您的企业中有 3 个主要利益相关者，则可以将钱包设置为在发送交易之前需要这所有 3 个人的批准。这确保了没有任何人可以盗取资金。
最重要的是，Gnosis Safe 让您对自己的资金进行完全的自我监管。银行不会给您运行加密业务带来麻烦，并且部署的智能合约完全不受信任约束且由您控制。

https://zhuanlan.zhihu.com/p/556189908
https://zhuanlan.zhihu.com/p/542449692

汇款Send tokens
合约交互Contract interaction

在多签管理、Spending limit 等基础功能之上，Safe 还有几个值得称道的功能：
Transaction builder：将多笔交易按照自己的意愿来进行组合，并最终以单笔交易的操作来实现：
a、被使用较多的：将处理 DAO 发工资中每个月都对数十个地址转账的数十次操作简化为一次操作，大幅降低人力；
b、有意思的：将使用 DEX 时的 approve 和 swap 两次点击简化为单次点击 >>>transaction builder 对时间顺序带来的业务逻辑的支持度，可以玩出花来；
Transaction Guard：对每笔交易提供交易前 & 交易后的 check 功能，check 的条件具备一定的自定义，e.g. 多打一个 0（超过转账上限），遭遇钓鱼地址（TBD）
APPS：Safe 内置的 Dapp 访问界面，点击 LOGO 即可进入对应应用，整体体验近似于 Web2 产品级别

当前以太坊支持两种类型的账户（你也可以称之为钱包）：
Externally Owned Accounts（EOA）：通过私钥来控制的账户，当前大部分钱包均属于此类 E.G. metamask；
Smart Contract Account：通过智能合约的代码（而非私钥）来实现访问和控制，这种模式几乎允许无限的功能；

以下罗列目前 Smart Contract Account 能够实现的「特异功能」（从上到下逐步进阶）：
多签：通过两个或更多账户来批准交易以提高安全性，甚至让离线授权介入以进一步节省时间；
金额限制：通过设置交易金额限制，以避免错误输入，也防止攻击者在一次交易中清空钱包；
白名单：用户可以指定仅向已知地址进行转账，防止钓鱼事件；
捆绑交易：为了便捷，在一次「捆绑」交易中执行与 dapp 交互的多次调用；
紧急冻结：在设备丢失或被盗的情况下，可以锁定帐户以确保资金安全；
账户恢复：诸如社交找回等多样的账户恢复功能，免除私钥 & 助记词丢失的巨大风险；
Gas 支付可调：将 gas 的支付方式抽象成可设置，例如第三方代交易发起者进行支付、用非 ETH 币种进行支付（接入 GSN）等；
预设条件：预定触发 & 执行逻辑，例如监听 Maker Vault 的抵押率，低于阈值后自动将部分抵押品会立即兑换为 Dai，用于偿还，以将 Vault 恢复到安全等级；
